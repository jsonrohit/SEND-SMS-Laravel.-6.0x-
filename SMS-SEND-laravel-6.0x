More information Read This Artical:-(https://medium.com/techtrument/send-sms-from-laravel-application-d3ac9d1a4fac)
<?php

namespace App\Http\Controllers;

use App\Contact;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Mail;
use Illuminate\Foundation\Bus\DispatchesJobs;
use Illuminate\Routing\Controller as BaseController;
use Illuminate\Foundation\Validation\ValidatesRequests;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use App\Pagination;
use GuzzleHttp\Exception\GuzzleException;
use GuzzleHttp\Client;

class ContactController extends Controller
{
    //    p.contact tamplate
    public function index()
    {
        return view('ui.contact');
    }
        private $SMS_SENDER = "NBISSS";
        private $RESPONSE_TYPE = 'json';
        private $SMS_USERNAME = 'Your username';
        private $SMS_PASSWORD = 'Your password';
    
    
        public function getUserNumber(Request $request)
        {
            $this->validate($request, [
                'name' => ['required', 'regex:/^([a-zA-Z]+)(\s[a-zA-Z]+)*$/'],
                'email' => 'required',
                'mobile' => 'required|digits:10',
               'subject' => ['required', 'regex:/^([a-zA-Z]+)(\s[a-zA-Z]+)*$/'],
                'message' => 'required',
                'g-recaptcha-response' => 'required|captcha',
            ]);
    
            $obj =['name'=>$request->get('name'),
            'email'=>$request->get('email'),
            'mobile'=>$request->get('mobile'),
            'subject'=>$request->get('subject'),
            'file'=>$request->file('file'),
            'message'=>$request->get('message'),
            
        ];
    //     $name = $request->get('name');
    //     $phone_number = $request->input('mobile');
    //     $message = $request->get('message');
    //     $file = $request->file('file');
    //    $email = $request->get('email');
    //    $subject = $request->get('subject');
// dd($obj);
        $objs= new Contact($obj);
        // $objs->save();

        mail::send('testmail', $obj, function($message) use ($obj){
            $message->from($obj['email'])->subject($obj['subject']);
            $message->to('parkenrohit@gmail.com')->cc('rrkk031@gmail.com');
            if ( $obj['file'] ) 
        			{
						$message->attach($obj['file']->getRealPath(), array(
							'as' 	=> $obj['file']->getClientOriginalName(), 
        					'mime' 	=> $obj['file']->getMimeType()));
					}
        });
        // return back()->with('success','Thanks For Contacting Us....');
    


           

            $name = $obj['name'];
            $phone_number = $obj['mobile'];
            $subject = $obj['subject'];

      
            $textmessage =('Dear'.' '.$name.' '.'Thank You For Contacting. We Will Contact You Soon Regards:- New Bright International Sr. Sec. School 9928777888');
            $textmessageAdmin =('Dear'.' '.$name.' '.'Query for this '.$subject.' . And mobile no is :-'.$phone_number);
    
            $this->initiateSmsActivation($phone_number, $textmessage);
            $this->initiateSmsActivationAdmin('7017793129', $textmessageAdmin);
              

                return back()->with('success','Thanks For Contacting Us....');
              
        }
    
        public function initiateSmsActivation($phone_number, $message){
            $isError = 0;
            $errorMessage = true;
    
            //Preparing post parameters
            $postData = array(
                'username' => $this->SMS_USERNAME,
                'password' => $this->SMS_PASSWORD,
                'message' => $message,
                'sender' => $this->SMS_SENDER,
                'mobiles' => $phone_number,
                'response' => $this->RESPONSE_TYPE
            );
    
            $url = "http://voice.par-ken.com/api/sendhttp.php?authkey=70776A1IeKpqa35523acb0";
    
            $ch = curl_init();
            curl_setopt_array($ch, array(
                CURLOPT_URL => $url,
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_POST => true,
                CURLOPT_POSTFIELDS => $postData
            ));
    
    
            //Ignore SSL certificate verification
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
    
    
            //get response
            $output = curl_exec($ch);
    
    
            //Print error if any
            if (curl_errno($ch)) {
                $isError = true;
                $errorMessage = curl_error($ch);
            }
            curl_close($ch);
    
    
            if($isError){
                return array('error' => 1 , 'message' => $errorMessage);
            }else{
                return array('error' => 0 );
            }
        }

        public function initiateSmsActivationAdmin($phone_number, $message){
            $isError = 0;
            $errorMessage = true;
    
            //Preparing post parameters
            $postData = array(
                'username' => $this->SMS_USERNAME,
                'password' => $this->SMS_PASSWORD,
                'message' => $message,
                'sender' => $this->SMS_SENDER,
                'mobiles' => $phone_number,
                'response' => $this->RESPONSE_TYPE
            );
    
            $url = "http://voice.par-ken.com/api/sendhttp.php?authkey=70776A1IeKpqa35523acb0";
    
            $ch = curl_init();
            curl_setopt_array($ch, array(
                CURLOPT_URL => $url,
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_POST => true,
                CURLOPT_POSTFIELDS => $postData
            ));
    
    
            //Ignore SSL certificate verification
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
    
    
            //get response
            $output = curl_exec($ch);
    
    
            //Print error if any
            if (curl_errno($ch)) {
                $isError = true;
                $errorMessage = curl_error($ch);
            }
            curl_close($ch);
    
    
            if($isError){
                return array('error' => 1 , 'message' => $errorMessage);
            }else{
                return array('error' => 0 );
            }
        }
}
